#include <iostream>
#include <stack>

using namespace std;

#ifndef stauts
    #define stauts int
#endif
#define QB2S_OK 1
#define QB2S_ERROR -1
#define QB2S_NULL -214748364

/**
??????? - 3
author     :   @`13
func       :   ?? ?????????????????
time       :   2016.10.18
 ?¡¤??
 1-???§Ö??????????????
 2-????????????¡¤??
    ???????????? S1 ????????????S2?????????????????????
    ?????????????S1
    ????  ?????§Ø??S2?????????
                        ?????
                            ???S1 ??????n-1 ??????????????????????
                        ????????
                            ??????????S2???????????????

   * ?????§»????§Ø???????????????????§Ö????
   *??S2 ??????????????????????§³?????????????????,??????????????????
   * ???????????????????????????¦Ë???????????????????????????
   * ??????¦Â???????????????????????????§Ö?????????????????
   * ?????????????????????????¦Å??
*/

// ???????ÈÉ????????????????
template <class DataType>
class QueneBy2Stack
// ??????????§µ?????????????????????
{
private:
    stack<DataType>  _s1;
    stack<DataType>  _s2;
    int count;  // ???§Þ???????

public:
    QueneBy2Stack()
    /** ?????? */
    { count = 0; }

    int getLength()
    /**????????§Ô??? */
    { return count;}

    stauts push(DataType a)
    /** ??????
         ????? a ???????*/
    {
        _s1.push(a);
        count++;
    }

    stauts pop()
    /** ?????????*/
    {
        if(_s1.empty()&&_s2.empty())
            return QB2S_ERROR;
        else if(!_s2.empty())
        {
            _s2.pop();
            count--;
            return QB2S_OK;
        }
        else
        {
            while (_s1.size() > 1)
            {   // ???????
                _s2.push(_s1.top());
                _s1.pop();
            }
            count--;
            _s1.pop();
            return QB2S_OK;
        }
    }

    DataType front()
    /** ?????????????? */
    {
        DataType e;
        if(_s1.empty()&&_s2.empty())
        {
            cout<<"???????????"<<endl;
            return QB2S_NULL;
        }
        else if(!_s2.empty())
            return _s2.top();
        else
        {
            while (_s1.size() > 1)
            {   // ???¦Å??????
                _s2.push(_s1.top());
                _s1.pop();
            }
            e = _s1.top();
            while (_s2.size() > 0)
            {
                _s1.push(_s2.top());
                _s2.pop();
            }
            return e;
        }
    }

    void raw_show()
    /** ???? */
    {
        int s1l = _s1.size();
        int s2l = _s2.size();
        cout<<"----------STACK 1----------"<<endl;
        for(int i=s1l;i>0;i--)
        {
            cout<<i<<"\t:\t"<<_s1.top()<<endl;
            _s1.pop();
        }
        cout<<"----------STACK 2----------"<<endl;
        for(int j=s2l;j>0;j--)
        {
            cout<<j<<"\t:\t"<<_s2.top()<<endl;
            _s2.pop();
        }
    }
};


int main(void)
{
    QueneBy2Stack<int> q;
    q.push(1);// 1
    cout<<"???????"<<q.front()<<endl;
    q.push(2);// 1 2 3
    q.push(3);// 1 2 3
    cout<<"???????"<<q.front()<<endl;
    q.pop();// 2 3
    q.push(4);// 2 3 4
    cout<<"???????"<<q.front()<<endl;
    q.push(5);// 2 3 4 5
    q.pop();// 3 4 5
    cout<<"???????"<<q.front()<<endl;

    q.raw_show();// ?????????

}